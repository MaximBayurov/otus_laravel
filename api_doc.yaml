openapi: 3.0.3
info:
  title: 'LanguagesConstructions API'
  description: 'Позволяет работать с Языками программирования и Языковыми конструкциями'
  version: 1.0.0
servers:
  - url: 'http://localhost'
    description: 'Локальный сервер для разработки'
paths:
  /api/auth/login:
    post:
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/X-Requested-With'
      summary: 'Авторизация пользователя'
      description: 'Авторизация по логину и паролю. Выдаёт токен, который нужно будет передавать при запросах'
      operationId: 'auth_login'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/AuthData'
      responses:
        200:
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDataResponse'

        401:
          description: Не удалось авторизовать пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'

  /api/auth/me:
    post:
      tags:
        - auth
      summary: 'Получение информации о пользователе'
      description: 'Получение информации о пользователе'
      operationId: 'auth_me'
      parameters:
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
      responses:
        200:
          description: Получение данных пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserData'

        401:
          description: Не удалось авторизовать пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'

  /api/auth/logout:
    post:
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
      summary: 'Выход пользователя'
      description: 'Инвалидация переданного токена'
      operationId: 'auth_logout'
      responses:
        200:
          description: Успешный выход
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulLogout'
        401:
          description: Не удалось авторизовать пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'

  /api/auth/refresh:
    post:
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
      summary: 'Запрос на обновление токена'
      description: Обновляет токен пользователя
      operationId: 'auth_refresh'
      responses:
        200:
          description: Успешное обновление токена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDataResponse'
        401:
          description: Не удалось авторизовать пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'

  /api/{version}/languages:
    get:
      tags:
        - languages
      summary: 'Получение списка языков программирования'
      description: Получает список языков программирования
      operationId: 'languages_list'
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
        - in: query
          name: languages-page
          description: Номер страницы постраничной навигации
          required: false
          schema:
            type: string
            default: 1
      responses:
        200:
          description: Получен список Языков программирования
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Language'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
    post:
      tags:
        - languages
      summary: 'Создание языка программирования'
      description: Создаёт язык программирования. Также создаёт реализации языковых конструкций в этом языке, если они переданы
      operationId: 'language_create'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/LanguageWithConstructions'
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
      responses:
        200:
          description: Успешно создан новый язык программирования
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessUpdate'
        403:
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        422:
          description: Ошибки валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
  /api/{version}/languages/{slug}:
    get:
      tags:
        - languages
      summary: 'Получение языка программирования'
      description: Получает детальную информацию о языке программирования. Параметр группировки доступен со второй версии (V2)
      operationId: 'languages_show'
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
        - $ref: '#/components/parameters/Slug'
        - $ref: '#/components/parameters/Group'
      responses:
        200:
          description: Получен Язык программирования
          content:
            application/json:
              schema:
                type: object
                properties:
                  language:
                    $ref: '#/components/schemas/Language'
                  constructions:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConstructionWithCodes'
        404:
          description: Не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    delete:
      tags:
        - languages
      summary: 'Удаление языка программирования'
      description: Удаляет язык программирования
      operationId: 'languages_delete'
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
        - $ref: '#/components/parameters/Slug'
      responses:
        200:
          description: Язык программирования успешно удалён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessUpdate'
        403:
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        404:
          description: Не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    patch:
      tags:
        - languages
      summary: 'Обновление языка программирования'
      description: Обновляет язык программирования
      operationId: 'languages_update'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/LanguageWithConstructions'
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
      responses:
        200:
          description: Успешно создан новый язык программирования
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessUpdate'
        403:
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        422:
          description: Ошибки валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
  /api/{version}/constructions:
    get:
      tags:
        - constructions
      summary: 'Получение списка языковых конструкций'
      description: Получает список языковых конструкций
      operationId: 'constructions_list'
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
        - in: query
          name: constructions-page
          description: Номер страницы постраничной навигации
          required: false
          schema:
            type: string
            default: 1
      responses:
        200:
          description: Получен список языковых конструкций
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Construction'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
    post:
      tags:
        - constructions
      summary: 'Создание языковой конструкции'
      description: Создаёт языковую конструкцию. Также создаёт реализации этой конструкций в языках программирования, если они переданы
      operationId: 'construction_create'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ConstructionWithLanguages'
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
      responses:
        200:
          description: Успешно создана новая языковая конструкция
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessUpdate'
        403:
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        422:
          description: Ошибки валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
  /api/{version}/constructions/{slug}:
    get:
      tags:
        - constructions
      summary: 'Получение языковой конструкции'
      description: Получает детальную информацию о языковой конструкции
      operationId: 'constructions_show'
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
        - $ref: '#/components/parameters/Slug'
        - $ref: '#/components/parameters/Group'
      responses:
        200:
          description: Получена языковая конструкция
          content:
            application/json:
              schema:
                type: object
                properties:
                  construction:
                    $ref: '#/components/schemas/Construction'
                  languages:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConstructionWithCodes'
        404:
          description: Не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    delete:
      tags:
        - constructions
      summary: 'Удаление языковой конструкции'
      description: Удаляет языковую конструкцию
      operationId: 'construction_delete'
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
        - $ref: '#/components/parameters/Slug'
      responses:
        200:
          description: Языковая конструкция успешно удалена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessUpdate'
        403:
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        404:
          description: Не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    patch:
      tags:
        - constructions
      summary: 'Обновление языковой конструкции'
      description: Обновляет языковую конструкцию
      operationId: 'constructions_update'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ConstructionWithLanguages'
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/X-Requested-With'
        - $ref: '#/components/parameters/AuthHeader'
      responses:
        200:
          description: Успешно создан новый язык программирования
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessUpdate'
        403:
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        422:
          description: Ошибки валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
components:
  parameters:
    X-Requested-With:
      name: X-Requested-With
      in: header
      required: true
      schema:
        type: string
        enum:
          - XMLHttpRequest
        default: XMLHttpRequest
    AuthHeader:
      in: header
      name: Authorization
      description: Переданный токен из метода логина
      schema:
        type: string
    Version:
      in: path
      name: version
      description: Версия API
      required: true
      schema:
        type: string
        enum:
          - v1
          - v2
    Slug:
      in: path
      name: slug
      description: Символьный идентификатор
      required: true
      schema:
        type: string
    Group:
      in: query
      name: group
      description: Группировка реализаций языковых конструкций. Если передан Y производит группировку
      required: true
      schema:
        type: string
  schemas:
    AuthData:
      type: object
      properties:
        email:
          description: Почта пользователя
          default: "test@test.test"
          type: string
        password:
          description: Пароль пользователя
          default: "Password123"
          type: string
    AuthDataResponse:
      type: object
      properties:
        access_token:
          type: string
          description: JWT токен
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0L2FwaS9hdXRoL2xvZ2luIiwiaWF0IjoxNzA4MjgzNTM5LCJleHAiOjE3MDgyODcxMzksIm5iZiI6MTcwODI4MzUzOSwianRpIjoieWo5cVJmc1ZqWEh3YXJYZSIsInN1YiI6IjEyIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.gkvJfhmcIuzoAWc6JEO9A_ShgDM5Snrv5aQWKd85UcQ
        token_type:
          type: string
          description: Тип токена
          example: bearer
        expires_in:
          type: integer
          description: Срок жизни
          example: 3600
    Unauthenticated:
      type: object
      properties:
        error:
          type: string
          description: Ошибка
          example: Unauthenticated
    UserData:
      type: object
      properties:
        id:
          type: integer
          description: ID пользователя
          example: 1
        name:
          type: string
          description: Полное имя пользователя
          example: Иванов Иван Иванович
        email:
          type: string
          description: E-mail
          example: test@test.test
        profile_image_url:
          type: string
          description: Ссылка картинки профиля
          example: https://via.placeholder.com/640x480.png/006600?text=placeat
    SuccessfulLogout:
      type: object
      properties:
        message:
          type: string
          example: Successfully logged out
    Language:
      type: object
      properties:
        id:
          type: integer
          example: 1
        slug:
          type: string
          example: php
        title:
          type: string
          example: Php
        description:
          type: string
          example: Labore doloremque numquam dolore laudantium dolorem ut
    PaginationLinks:
      type: object
      properties:
        first:
          type: string
          example: "http://localhost/api/v1/languages?languages-page=1"
        last:
          type: string
          example: "http://localhost/api/v1/languages?languages-page=12"
        prev:
          type: string
          example: "http://localhost/api/v1/languages?languages-page=5"
        next:
          type: string
          example: "http://localhost/api/v1/languages?languages-page=7"
    PaginationMeta:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        from:
          type: integer
          example: 1
        last_page:
          type: integer
          example: 12
        links:
          type: array
          items:
            $ref: '#/components/schemas/PaginationLink'
        path:
          type: string
          example: "http://localhost/api/v1/languages"
        per_page:
          type: integer
          example: 10
        to:
          type: integer
          example: 10
        total:
          type: integer
          example: 120
    PaginationLink:
      type: object
      properties:
        url:
          type: string
          example: "http://localhost/api/v1/languages?languages-page=1"
        label:
          type: string
          example: "1"
        active:
          type: boolean
          example: false
    AccessDenied:
      type: object
      properties:
        error:
          type: string
          example: "Access denied"
    SuccessUpdate:
      type: object
      properties:
        success:
          type: boolean
          example: true
        slug:
          type: string
          example: php
    ValidationErrors:
      type: object
      properties:
        message:
          type: string
          example: The slug has already been taken
        errors:
          type: object
          properties:
            slug:
              type: array
              items:
                type: string
    NotFound:
      type: object
      properties:
        error:
          type: string
          example: Not found
    ConstructionWithCodes:
      type: object
      properties:
        id:
          type: integer
          example: 1
        slug:
          type: string
          example: php
        title:
          type: string
          example: Php
        description:
          type: string
          example: Labore doloremque numquam dolore laudantium dolorem ut
        codes:
          type: array
          items:
            type: string
            example: Labore doloremque numquam dolore laudantium dolorem ut
    LanguageWithConstructions:
      type: object
      properties:
        slug:
          type: string
          example: php
        title:
          type: string
          example: Php
        description:
          type: string
          example: Labore doloremque numquam dolore laudantium dolorem ut
        constructions:
          type: array
          items:
            $ref: '#/components/schemas/ImplementationCode'
    ImplementationCode:
      type: object
      properties:
        id:
          type: integer
          example: 2
        code:
          type: string
          example: test
    Construction:
      type: object
      properties:
        id:
          type: integer
          example: 1
        slug:
          type: string
          example: php
        title:
          type: string
          example: Php
        description:
          type: string
          example: Labore doloremque numquam dolore laudantium dolorem ut
    ConstructionWithLanguages:
      type: object
      properties:
        slug:
          type: string
          example: php
        title:
          type: string
          example: Php
        description:
          type: string
          example: Labore doloremque numquam dolore laudantium dolorem ut
        constructions:
          type: array
          items:
            $ref: '#/components/schemas/ImplementationCode'
